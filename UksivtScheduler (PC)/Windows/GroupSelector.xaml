<Window x:Class = "UksivtScheduler_PC.Windows.GroupSelector"
        xmlns = "http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x = "http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d = "http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc = "http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local = "clr-namespace:UksivtScheduler_PC.Windows"
        mc:Ignorable = "d"
        Title = "Расписание УКСиВТ" 
        MinHeight = "500" MinWidth = "700"
        Padding = "10"
        WindowStartupLocation = "CenterScreen"
        Closed = "Window_Closed">

    <!-- #region Область: Стили. -->
    <Window.Resources>
        <Style x:Key = "FocusVisual">
            <Setter Property = "Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin = "2" StrokeDashArray = "1 2" Stroke = "{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                        SnapsToDevicePixels = "true" StrokeThickness = "1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key = "Button.Static.Background" Color = "#FFDDDDDD"/>

        <SolidColorBrush x:Key = "Button.Static.Border" Color = "#FF707070"/>

        <SolidColorBrush x:Key = "Button.MouseOver.Background" Color = "#FFBEE6FD"/>

        <SolidColorBrush x:Key = "Button.MouseOver.Border" Color = "#FF3C7FB1"/>

        <SolidColorBrush x:Key = "Button.Pressed.Background" Color = "#FFC4E5F6"/>

        <SolidColorBrush x:Key = "Button.Pressed.Border" Color = "#FF2C628B"/>

        <SolidColorBrush x:Key = "Button.Disabled.Background" Color = "#FFF4F4F4"/>

        <SolidColorBrush x:Key = "Button.Disabled.Border" Color = "#FFADB2B5"/>

        <SolidColorBrush x:Key = "Button.Disabled.Foreground" Color = "#FF838383"/>

        <Style x:Key = "RoundedButton" TargetType = "{x:Type Button}">
            <Setter Property = "FocusVisualStyle" Value = "{StaticResource FocusVisual}"/>

            <Setter Property = "Background" Value = "{StaticResource Button.Static.Background}"/>

            <Setter Property = "BorderBrush" Value = "{StaticResource Button.Static.Border}"/>

            <Setter Property = "Foreground" Value = "{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>

            <Setter Property = "BorderThickness" Value = "1"/>

            <Setter Property = "HorizontalContentAlignment" Value = "Center"/>

            <Setter Property = "VerticalContentAlignment" Value = "Center"/>

            <Setter Property = "Padding" Value = "1"/>

            <Setter Property = "Template">
                <Setter.Value>
                    <ControlTemplate TargetType = "{x:Type Button}">
                        <Border x:Name = "border" Background = "{TemplateBinding Background}" BorderBrush = "{TemplateBinding BorderBrush}" 
                        BorderThickness = "{TemplateBinding BorderThickness}" SnapsToDevicePixels = "true" CornerRadius = "15">
                            <ContentPresenter x:Name = "contentPresenter" Focusable = "False" HorizontalAlignment = "{TemplateBinding HorizontalContentAlignment}" 
                            Margin = "{TemplateBinding Padding}" RecognizesAccessKey = "True" SnapsToDevicePixels = "{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment = "{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property = "IsDefaulted" Value = "true">
                                <Setter Property = "BorderBrush" TargetName = "border" Value = "{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>

                            <Trigger Property = "IsPressed" Value = "true">
                                <Setter Property = "Background" TargetName = "border" Value = "LightGray"/>
                                <Setter Property = "BorderBrush" TargetName = "border" Value = "Gray"/>
                            </Trigger>

                            <Trigger Property = "IsEnabled" Value = "false">
                                <Setter Property = "Background" TargetName = "border" Value = "{StaticResource Button.Disabled.Background}"/>
                                <Setter Property = "BorderBrush" TargetName = "border" Value = "{StaticResource Button.Disabled.Border}"/>
                                <Setter Property = "TextElement.Foreground" TargetName = "contentPresenter" Value = "{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!-- #endregion -->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height = "5*"/>
            <RowDefinition Height = "20*"/>
            <RowDefinition Height="5*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <Label Name = "GroupSelector_Header" Grid.Row = "0" Grid.Column = "0" Grid.ColumnSpan="3" 
        Content = "Пожалуйста, выбери свою группу в списке ниже." FontSize = "26" FontFamily = "Georgia" 
        HorizontalContentAlignment = "Center" VerticalContentAlignment = "Center"/>

        <!-- Заполнять список будем UserControl без привязок, так что ничего здесь не предопределяем. -->
        <ListView Name = "GroupSelector_GroupList" Grid.Row = "1" Grid.Column = "0" Grid.ColumnSpan="3" 
        HorizontalContentAlignment="Stretch"/>

        <Button Name = "GroupSelector_GoBack" Grid.Row = "2" Grid.Column = "1" Background = "#393939" Margin = "10"
        Content = "Назад" Foreground = "White" FontFamily = "Georgia" FontSize = "26" Click = "GoBackClick"
        Style = "{DynamicResource RoundedButton}"/>
    </Grid>
</Window>
